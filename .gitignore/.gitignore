/*heartbeat sensor*/
import numpy as np
import cv2

#connecting with the captured video file taken from mobile
cap = cv2.VideoCapture('heart_rate.mp4')

#getting the number of frames 
no_of_frames = int(cap.get(7))

#assigning an initial zero red value for every frame
red_plane = np.zeros(no_of_frames)

#time_list is used for storing occurence time of each frame in the video  
time_list=[]
t=0

#camera frame per second is 30 and so each frame acccurs after 1/30th second
difference = 1/30
for i in range(no_of_frames):

    #reading the frame
    ret,frame = cap.read()
    length,width,channels = frame.shape

    #calculating average red value in the frame
    red_plane[i] = np.sum(frame[:,:,2])/(length*width)
    time_list.append(t)
    t = t+ difference
/*temperature sensor*/
def hotwater():
    sense = SenseHat()
    sense.clear()
    return round(sense.get_temperature(), 1)
if __name__ == '__main__':
    while True:
        celsius = hotwater()
        result = 'temp. C' + str(celcius)
        print(result)
        result_list = [(datetime.datetime.now(), celcius)]
/*accelerometer sensor*/
import smbus
import time 
# Get I2C bus
bus = smbus.SMBus(1)
# ADXL345 address, 0x53(83)
# Select bandwidth rate register, 0x2C(44)# 0x0A(10) Normal mode, Output data rate = 100 Hz
bus.write_byte_data(0x53, 0x2C, 0x0A)
# ADXL345 address, 0x53(83)
# Select power control register, 0x2D(45)
# 0x08(08) Auto Sleep disable
bus.write_byte_data(0x53, 0x2D, 0x08)
# ADXL345 address, 0x53(83)
# Select data format register, 0x31(49)
# 0x08(08) Self test disabled, 4-wire interface
# Full resolution, Range = +/-2g
bus.write_byte_data(0x53, 0x31, 0x08) 
time.sleep(0.5) 
# ADXL345 address, 0x53(83)
# Read data back from 0x32(50), 2 bytes
# X-Axis LSB, X-Axis MSB
data0 = bus.read_byte_data(0x53, 0x32)
data1 = bus.read_byte_data(0x53, 0x33)
# Convert the data to 10-bits
xAccl = ((data1 & 0x03) * 256) + data0
if xAccl > 511 :
xAccl -= 1024
# ADXL345 address, 0x53(83)
# Read data back from 0x34(52), 2 bytes
# Y-Axis LSB, Y-Axis MSB
data0 = bus.read_byte_data(0x53, 0x34)
data1 = bus.read_byte_data(0x53, 0x35)
# Convert the data to 10-bits
yAccl = ((data1 & 0x03) * 256) + data0
if yAccl > 511 : 
yAccl -= 1024 
# ADXL345 address, 0x53(83)
# Read data back from 0x36(54), 2 bytes
# Z-Axis LSB, Z-Axis MSB
data0 = bus.read_byte_data(0x53, 0x36)
data1 = bus.read_byte_data(0x53, 0x37) 
# Convert the data to 10-bits
zAccl = ((data1 & 0x03) * 256) + data0
if zAccl > 511 : 
zAccl -= 1024 
# Output data to screen
print "Acceleration in X-Axis : %d" %xAccl
print "Acceleration in Y-Axis : %d" %yAccl
print "Acceleration in Z-Axis : %d" %zAccl








